generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                      String   @id @default(uuid())
  fullName                String?
  fatherName              String?
  epicId                  String?
  image                   String?
  mobileNumber            String   @unique
  fcmToken                String   @unique
  legislativeConstituency String?
  boothNameOrNumber       String?
  gender                  String?
  age                     Int?
  email                   String?  @unique
  timeZone                String?   @default("UTC")

  @@map("user")
}

model Grievance {
  id                     String   @id @default(uuid())
  category               String   // Category of the grievance
  subCategory            String   // Sub-category of the grievance
  fullName               String?  // Full name of the person submitting the grievance
  fatherName             String?  // Father's name
  legislativeConstituency String? // Legislative constituency of the person
  boothNameOrNumber      String?  // Booth name or number
  contactNumber          String   // Contact number of the person
  gender                 String?  // Gender of the person
  age                    Int?     // Age of the person
  voterId                String?  // Voter ID (EPIC No)
  ticketTitle            String   // Title of the grievance ticket
  description            String?  // Description of the grievance
  attachment             String?  // File path to the attachment
  attachments            Json
  status                 Int      @default(0)
  note                   String?
  isAdmin                Boolean?

  createdAt              DateTime @default(now()) // Timestamp for when the grievance was created
  updatedAt              DateTime @updatedAt      // Timestamp for when the grievance was last updated
}

model Event {
  id             String   @id @default(uuid())
  eventTitle     String
  date           DateTime
  fromTime       String?  // Make optional
  toTime         String?  // Make optional
  constituency   String?
  boothNumber    String?
  mobileNumber   String?
  status         Int      @default(0)      
  document       String?  
  documents      Json?    // Updated to Json to store a list of document paths
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@map("events")
}

model EpicUser {
  id                      String   @id @default(uuid())
  fullName                String?
  fatherName              String?
  image                   String? 
  epicId                  String?
  mobileNumber            String   @unique
  fcmToken                String   @unique
  legislativeConstituency String?
  boothNameOrNumber       String?
  gender                  String?
  age                     Int?
  email                   String?  @unique
  timeZone                String?   @default("UTC")
}

model Constituency {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Booth {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
